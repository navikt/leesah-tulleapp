name: Test, build, and publish to ghcr.io
on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Cargo.toml'
      - '.github/workflows/build.yaml'
      - 'nais.yaml'
env:
  IMAGE: ghcr.io/${{ github.repository }}
jobs:
  set-version:
    name: Generate version
    runs-on: ubuntu-20.04
    steps:
      - id: version
        run: echo ::set-output name=version::"$(date +'%Y-%m-%d')-${GITHUB_SHA::8}"
      - id: tag
        run: echo ::set-output name=tag::"${IMAGE}:${{ steps.version.outputs.version }}"
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.tag.outputs.tag }}
  build:
    name: Test, build and push Docker image
    runs-on: ubuntu-20.04
    needs: set-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v1
        id: buildx
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-dockerx6-${{ needs.set-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-dockerx6-
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target
          key: musl-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Ensure cargo dirs exist
        run: |
          mkdir -p ~/.cargo/{git,registry}
      - name: Test
        run: |
          docker run --rm -t \
              --mount type=bind,source=${{ github.workspace }},target=/volume \
              --mount type=bind,source=$HOME/.cargo/registry,target=/root/.cargo/registry \
              --mount type=bind,source=$HOME/.cargo/git,target=/root/.cargo/git \
              clux/muslrust:stable \
              cargo test --release -- --test-threads 1
      - name: Build binary
        run: |
          docker run --rm -t \
              --mount type=bind,source=${{ github.workspace }},target=/volume \
              --mount type=bind,source=$HOME/.cargo/registry,target=/root/.cargo/registry \
              --mount type=bind,source=$HOME/.cargo/git,target=/root/.cargo/git \
              clux/muslrust:stable \
              cargo build --release
          cp target/x86_64-unknown-linux-musl/release/leesah-tulleapp .
      - name: Build and publish Docker image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ needs.set-version.outputs.tag }}
          cache-from: type=gha,scope=version5
          cache-to: type=gha,scope=version5,mode=max
  deploy:
    needs: [ set_version, build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais.yml
          IMAGE: ${{ needs.set_version.outputs.tag }}
